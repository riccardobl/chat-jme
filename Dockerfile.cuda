FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as faissbuilder

ENV CUDA_HOME=/usr/local/cuda-11
ENV FAISS_ENABLE_GPU=ON
ENV PATH="/usr/local/cuda-11/bin:$PATH"
WORKDIR /root
RUN \
apt-get update  &&\
apt-get install -y build-essential  &&\
apt-get install -y cmake swig git python3 python3-pip python3-dev libopenblas-dev  libpcre3-dev &&\
apt-get upgrade -y &&\
apt-get clean  &&\
rm -rf /var/lib/apt/lists/* &&\
git clone https://github.com/facebookresearch/faiss.git --depth 1 --branch v1.7.3 &&\
cd faiss &&\
PYTHON_EXECUTABLE="$(which python3)"&&\
pip3 install numpy &&\
cmake -B build \
        -DPython_EXECUTABLE="$PYTHON_EXECUTABLE" \
        -DCMAKE_CUDA_ARCHITECTURES="60;75"\
        -DFAISS_ENABLE_GPU=ON \
        -DFAISS_ENABLE_C_API=ON \
        -DFAISS_ENABLE_PYTHON=ON \
        -DBUILD_TESTING=OFF \
         -DFAISS_OPT_LEVEL=avx2  \
         -DCMAKE_BUILD_TYPE=Release \
        . &&\
MAKE_FLAGS=" -j$(nproc) " &&\
make  -C build $MAKE_FLAGS


FROM nvidia/cuda:11.8.0-devel-ubuntu22.04

# SET ME
ENV OPENAI_API_KEY=""
###

ENV JME_HUB_URL="https://hub.jmonkeyengine.org"
ENV INDEX_PATH="/app/embeddings/"
ENV CACHE_PATH="/home/nonroot/.cache/"
ENV TRANSLATION_SERVICE="https://translate.frk.wf"
ENV JME_HUB_KNOWLEDGE_CUTOFF="2023-02-03"
ENV JME_HUB_SEARCH_FILTER="in:first order:likes"
ENV DEVICE="cuda"
ENV USE_SUMY="false"
ENV OPENAI_MODEL="text-davinci-003"

ENV CONFIG_PATH="/app/config.json"
ENV CONDA_DIR /home/nonroot/miniconda3
ENV PATH=$CONDA_DIR/bin:$PATH

COPY environment.yml /tmp/environment.yml
COPY requirements.txt /tmp/requirements.txt
COPY --from=faissbuilder /root/faiss/build/faiss/python/ /tmp/faiss-build

RUN apt-get update && \
apt-get install -y wget git && \
apt-get clean && \
rm -rf /var/lib/apt/lists/* &&\
mkdir -p /app &&\
groupadd --gid 1000 nonroot&&\
useradd -m  --uid 1000 --gid 1000 nonroot&&\
chown nonroot:nonroot -Rf /app

WORKDIR /app
USER nonroot

RUN cd /tmp&&\
wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
/bin/bash /tmp/miniconda.sh -b  &&\
rm /tmp/miniconda.sh &&\
eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda env create  -f environment.yml &&\
conda activate jmebot&&\
conda install --yes -c conda-forge libstdcxx-ng&&\
conda install --yes cuda-toolkit=11.7 pytorch pytorch-cuda=11.7 -c pytorch -c nvidia  -c "nvidia/label/cuda-11.7.0"  &&\
pip uninstall --yes faiss-cpu &&\
pip --verbose install -r requirements.txt &&\
cd /tmp/faiss-build &&\
python3 setup.py build &&\
python3 setup.py install&&\
cd /app &&\
rm -Rf /tmp/faiss-build &&\
pip --verbose cache purge  &&\
conda clean --all --yes 

ADD . /app

USER root
ADD . /app
RUN chown nonroot:nonroot -Rf /app

USER nonroot
ENTRYPOINT [ "bash" , "/app/docker_entrypoint.sh" ]