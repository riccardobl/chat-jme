FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as faissbuilder

ENV CUDA_HOME=/usr/local/cuda
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
ENV FAISS_ENABLE_GPU=ON
ENV PATH="/usr/local/cuda-11/bin:$PATH"
WORKDIR /root
RUN \
apt-get update  &&\
apt-get install -y build-essential  &&\
apt-get install -y cmake swig git python3 python3-pip python3-dev libopenblas-dev  libpcre3-dev &&\
apt-get upgrade -y &&\
apt-get clean  &&\
rm -rf /var/lib/apt/lists/* &&\
git clone https://github.com/facebookresearch/faiss.git --depth 1 --branch v1.7.3 &&\
cd faiss &&\
PYTHON_EXECUTABLE="$(which python3)"&&\
pip3 install numpy &&\
cmake -B build \
        -DPython_EXECUTABLE="$PYTHON_EXECUTABLE" \
        -DCMAKE_CUDA_ARCHITECTURES="60;75"\
        -DFAISS_ENABLE_GPU=ON \
        -DFAISS_ENABLE_C_API=ON \
        -DFAISS_ENABLE_PYTHON=ON \
        -DBUILD_TESTING=OFF \
         -DFAISS_OPT_LEVEL=avx2  \
         -DCMAKE_BUILD_TYPE=Release \
        . &&\
MAKE_FLAGS=" -j$(nproc) " &&\
make  -C build $MAKE_FLAGS


FROM nvidia/cuda:11.8.0-devel-ubuntu22.04
# SET ME
ENV OPENAI_API_KEY=""
###

ENV JME_HUB_URL="https://hub.jmonkeyengine.org"
ENV INDEX_PATH="/app/embeddings/"
ENV CACHE_PATH="/home/nonroot/.cache/"
ENV TRANSLATION_SERVICE="https://translate.frk.wf"
ENV JME_HUB_KNOWLEDGE_CUTOFF="2023-02-03"
ENV JME_HUB_SEARCH_FILTER="in:first order:likes"
ENV DEVICE="cuda"
ENV USE_SUMY="false"
ENV OPENAI_MODEL="text-davinci-003"

ENV CONFIG_PATH="/app/config.json"
ENV CONDA_DIR="/home/nonroot/miniconda3"
ENV CUDA_HOME="/usr/local/cuda"
ENV PATH="/usr/local/cuda/bin:$PATH"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
ENV NVIDIA_VISIBLE_DEVICES="all"

COPY environment.yml /tmp/environment.yml
COPY requirements.txt /tmp/requirements.txt
WORKDIR /app

USER root
RUN groupadd --gid 1000 nonroot&&\
useradd -m  --uid 1000 --gid 1000 nonroot&&\
apt-get update && \
apt-get install -y wget git && \
apt-get clean && \
rm -rf /var/lib/apt/lists/* &&\
mkdir -p /app &&\
chown nonroot:nonroot -Rf /app

USER nonroot
RUN cd /tmp &&\
wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
/bin/bash /tmp/miniconda.sh -b  &&\
rm /tmp/miniconda.sh &&\
eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda env create  -f environment.yml &&\
conda activate jmebot&&\
conda update --yes -n base -c defaults conda &&\
pip install  --upgrade pip &&\
pip --verbose cache purge  &&\
conda clean --all --yes 

RUN eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda activate jmebot&&\
conda install --yes -c nvidia  cuda-toolkit==11.7 libopenblas  -c pytorch &&\
pip --verbose cache purge  &&\
conda clean --all --yes 

RUN eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda activate jmebot&&\
conda install --yes -c nvidia  pytorch-cuda=11.7 pytorch==1.13.1  -c pytorch  &&\
conda install --yes -c conda-forge libstdcxx-ng &&\
pip uninstall -y torch &&\
pip install  torch==1.13.1 --extra-index-url https://download.pytorch.org/whl/cu117 &&\
pip --verbose cache purge  &&\
conda clean --all --yes 


RUN eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda activate jmebot&&\
cd /tmp &&\
pip --verbose install -r requirements.txt &&\
pip --verbose cache purge  &&\
conda clean --all --yes 

USER root
COPY --from=faissbuilder /root/faiss/build/faiss/python/ /tmp/faiss-build
RUN chown nonroot:nonroot -Rf /tmp/faiss-build

USER nonroot
RUN eval "$($CONDA_DIR/bin/conda shell.bash hook)"&&\
conda init bash &&\
conda activate jmebot&&\
cd /tmp/faiss-build &&\
python3 setup.py build &&\
python3 setup.py install&&\
pip uninstall --yes faiss-cpu &&\
pip --verbose cache purge  &&\
conda clean --all --yes 


USER root
ADD . /app
RUN chown nonroot:nonroot -Rf /app
USER nonroot

ENTRYPOINT [ "bash" , "/app/docker_entrypoint.sh" ]